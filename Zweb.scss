// Math import
@use 'sass:math';

//import Variables
@use 'src/variables' as *;

//import Mixins
@use 'src/mixins' as *;


// Global Rules
*{
  margin: 0;
  box-sizing: border-box;
}

a{
  text-decoration: none;
}

img{
  display: block;
}

ul{
  list-style: none;
  padding: 0;
}

// Utilities
@each $property, $map in $utilities{
  $prefix: map-get($map ,"prefix");
  $values: map-get($map ,"values");

  @each $k, $v in $values{
    .#{$prefix}-#{$k}{
      #{$property}: $v;
    }
  }
};

@each $color, $v in $colors{
  @each $scale, $value in $v{
    @if($scale=="default"){
      .color-#{$color}{
        color: $value;
      }
      .back-#{$color}{
        background-color: $value;
      }
    }@else{
      .color-#{$color}-#{$scale}{
        color: $value;
      }
      .back-#{$color}-#{$scale}{
        background-color: $value;
      }
    }
  }
};

@each $color, $v in $gray{
  .color-#{$color}{
    color: $v;
  }
  .back-#{$color}{
    background-color: $v;
  }
}

// Grid System
.container{
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 $base-padding;
}

.row{
  display: flex;
  flex-flow: row wrap;
}

@include xs{
  @for $i from 1 through $grid-columns{
    .col-#{$i}-xs{
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
};

@include sm{
  @for $i from 1 through $grid-columns{
    .col-#{$i}-sm{
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
};

@include md{
  @for $i from 1 through $grid-columns{
    .col-#{$i}-md{
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
};

@include lg{
  @for $i from 1 through $grid-columns{
    .col-#{$i}-lg{
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
};

@include xl{
  @for $i from 1 through $grid-columns{
    .col-#{$i}-xl{
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
};

@each $k, $v in $grid-gaps{
  //this class put in row
  .gap-#{$k} > *{
    padding: $v;
  }
  .gap-#{$k}{
    margin-left: -$v;
    margin-right: -$v;
  }
}

.btn{
  @include btn;
}

@each $k, $v in $colors{
  $color: map-get($v , "default" );

  .btn-#{$k}{
    @include btn($color);
    &:hover{
      background-color: lighten($color, 5%);
    }
  }

  .btn-outlined-#{$k}{
    @include btn(transparent);
    border-color: $color;
    &:hover{
      background-color: $color;
      color: transparent;
    }
  }
}

.card{
  @include cardWshadow();
}